{"ast":null,"code":"import _classCallCheck from \"/Users/calumbruton/Documents/EVERYTHING-PROGRAMMING/Personal-Projects/pictochat/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/calumbruton/Documents/EVERYTHING-PROGRAMMING/Personal-Projects/pictochat/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/calumbruton/Documents/EVERYTHING-PROGRAMMING/Personal-Projects/pictochat/Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/calumbruton/Documents/EVERYTHING-PROGRAMMING/Personal-Projects/pictochat/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/calumbruton/Documents/EVERYTHING-PROGRAMMING/Personal-Projects/pictochat/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/calumbruton/Documents/EVERYTHING-PROGRAMMING/Personal-Projects/pictochat/Frontend/src/javascript/components/chatBox.jsx\";\nimport React, { Component } from 'react';\nimport DrawableCanvas from './drawableCanvas.jsx';\nimport CircularColor from 'react-circular-color';\n\nvar ChatBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatBox, _Component);\n\n  function ChatBox(props) {\n    var _this;\n\n    _classCallCheck(this, ChatBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatBox).call(this, props));\n    _this.state = {\n      currentColor: \"black\"\n    };\n    _this.child = React.createRef();\n    return _this;\n  }\n\n  _createClass(ChatBox, [{\n    key: \"handleClearOnClick\",\n    value: function handleClearOnClick() {\n      this.child.current.resetCanvas();\n    }\n  }, {\n    key: \"handleColorChange\",\n    value: function handleColorChange(color) {\n      console.log(color);\n      this.setState({\n        currentColor: color\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"chatbox-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"canvas-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(DrawableCanvas, {\n        ref: this.child,\n        color: this.state.currentColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttons-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"clear-canvas-button\",\n        onClick: function onClick() {\n          return _this2.handleClearOnClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(\"button\", {\n        className: \"send-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Send\"), React.createElement(\"div\", {\n        className: \"center-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(CircularColor, {\n        size: 50,\n        onChange: function onChange(color) {\n          return _this2.handleColorChange(color);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ChatBox;\n}(Component);\n\nexport default ChatBox;","map":{"version":3,"sources":["/Users/calumbruton/Documents/EVERYTHING-PROGRAMMING/Personal-Projects/pictochat/Frontend/src/javascript/components/chatBox.jsx"],"names":["React","Component","DrawableCanvas","CircularColor","ChatBox","props","state","currentColor","child","createRef","current","resetCanvas","color","console","log","setState","handleClearOnClick","handleColorChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AADe,UAKjBC,KALiB,GAKX;AACFC,MAAAA,YAAY,EAAE;AADZ,KALW;AAEf,UAAKC,KAAL,GAAaR,KAAK,CAACS,SAAN,EAAb;AAFe;AAGhB;;;;yCAMoB;AACjB,WAAKD,KAAL,CAAWE,OAAX,CAAmBC,WAAnB;AACH;;;sCAEiBC,K,EAAO;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAKG,QAAL,CAAe;AAACR,QAAAA,YAAY,EAAEK;AAAf,OAAf;AACD;;;6BAEM;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAE,KAAKJ,KAA1B;AAAiC,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAG,qBAApB;AAA0C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACS,kBAAL,EAAN;AAAA,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,QAAA,SAAS,EAAG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAE,EAArB;AAAyB,QAAA,QAAQ,EAAE,kBAACJ,KAAD;AAAA,iBAAW,MAAI,CAACK,iBAAL,CAAuBL,KAAvB,CAAX;AAAA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/B,CAHJ,CAJJ,CADJ;AAYH;;;;EAhCiBX,S;;AAqCtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport DrawableCanvas from './drawableCanvas.jsx'\nimport CircularColor from 'react-circular-color';\n\nclass ChatBox extends Component {\n    constructor(props) {\n        super(props);\n        this.child = React.createRef();\n      }\n\n      state={\n          currentColor: \"black\",\n      }\n\n      handleClearOnClick() {\n          this.child.current.resetCanvas();\n      }\n\n      handleColorChange(color) {\n        console.log(color);\n        this.setState( {currentColor: color} )\n      }\n\n    render() {\n        return (\n            <div className = \"chatbox-container\">\n                <div className = \"canvas-container\">\n                    <DrawableCanvas ref={this.child} color={this.state.currentColor}/>\n                </div>\n                <div className = \"buttons-container\">\n                    <button className = \"clear-canvas-button\" onClick={() => this.handleClearOnClick()}>Clear</button>\n                    <button className = \"send-button\">Send</button>\n                    <div className=\"center-button\"><CircularColor size={50} onChange={(color) => this.handleColorChange(color)}/></div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}